---
title: "BSA"
author: "Tom Saunders"
format: gfm
knitr:
  opts_chunk:
    fig.path: figs/
---

```{r}
#| message: false
library(readxl)
library(lubridate)
library(readr)
library(dplyr)
library(stringr)
library(tidyr)
```

Read in two datasets: the first is for complaints made under the previous BSA Codebook (1 April 2016 to 30 June 2022); the second is for complaints made under the current Codebook (1 July 2022 to present).

```{r}
bsa_prev <- read_excel("data/20230810 AllClosedFormalComplaints.xlsx")
bsa_curr <- read_excel("data/20230807 AllClosedFormalComplaints.xlsx")
```

Convert `Broadcast Date/Time` to date in each dataset. I can't find a way to preserve times.

```{r}
bsa_prev$`Broadcast Date/Time` <- as.numeric(bsa_prev$`Broadcast Date/Time`)
bsa_prev$`Broadcast Date/Time` <- as.Date(bsa_prev$`Broadcast Date/Time`, origin = "1899-12-30")

bsa_curr$`Broadcast Date/Time` <- as.Date(bsa_curr$`Broadcast Date/Time`, origin = "1899-12-30")
```

Join the two datasets.

```{r}
#| message: false
bsa_full <- full_join(bsa_prev, bsa_curr)
```

Rename columns.

```{r}
colnames(bsa_full) <- c("broadcaster", "complaint", "programme", "broadcast_date", "genre",
                        "code", "determination", "decision_date", "majority", "split", 
                        "elect_standards", "elect_notupheld", "elect_upheld", 
                        "fta_standards", "fta_notupheld", "fta_upheld", "paytv_standards",
                        "paytv_notupheld", "paytv_upheld", "radio_standards", "radio_notupheld",
                        "radio_upheld", "standards", "not_upheld", "upheld", "tv_radio")
```

Consolidate individual standards based on previous codebook into 'standards' column introduced for new codebook. Repeat for 'upheld' and 'not upheld' standards. Drop these columns once they are consolidated.

```{r}

bsa_full$standards <- coalesce(bsa_full$elect_standards, bsa_full$fta_standards, bsa_full$paytv_standards, bsa_full$radio_standards, bsa_full$standards)
  
bsa_full$not_upheld <- coalesce(bsa_full$elect_notupheld, bsa_full$fta_notupheld, bsa_full$paytv_notupheld, bsa_full$radio_notupheld, bsa_full$not_upheld)

bsa_full$upheld <- coalesce(bsa_full$elect_upheld, bsa_full$fta_upheld, bsa_full$paytv_upheld, bsa_full$radio_upheld, bsa_full$upheld)

bsa_full <- select(bsa_full, -c(11:22))
```

Fix factors.WIP.

```{r}
# Recode 'broadcaster' "Newstalk ZB" as the actual Broadcaster
bsa_full$broadcaster <- recode(bsa_full$broadcaster, "Newstalk ZB" = "NZME Radio Ltd")

# Recode 'complaint' numbers as what they have been renumbered to
bsa_full$complaint <- recode(bsa_full$complaint, 
                             "2016-053 (renumbered 048B)" = "2016-048B",
                             "2017-027 (renumbered 018B)" = "2017-018B",
                             "2017-028 (renumbered 018C)" = "2017-018C",
                             "2017-029 (renumbered 018D)" = "2017-018D")

# programme: Need to figure out how to use regex

# Recode 'code' as 'either 'Television' or 'Radio', move to 'tv_radio' column to align with new codebook, then delete 'code' column.

bsa_full$code <- recode(bsa_full$code, 
                             "Free to Air TV" = "Television",
                             "Pay TV" = "Television",
                             "Election Program" = "Television")

bsa_full$tv_radio <- coalesce(bsa_full$code, bsa_full$tv_radio)

bsa_full <- select(bsa_full, -code)

# Remove asterisk and whitespace from columns containing them.
bsa_full <- bsa_full |> 
  mutate(
    standards = gsub("\\*", "", standards),
    not_upheld = gsub("\\*", "", not_upheld),
    upheld = gsub("\\*", "", upheld),
  )

bsa_full$standards <- str_trim(bsa_full$standards, "left")
bsa_full$upheld <- str_trim(bsa_full$upheld, "left")
bsa_full$not_upheld <- str_trim(bsa_full$not_upheld, "left")

# Sort out standards/upheld/not_upheld columns

## first find rows where upheld and not_upheld both are NA
bsa_test <- bsa_full

missing <- bsa_test |> 
  filter(is.na(upheld) & is.na(not_upheld))

## check BSA web database to understand these examples

# When ready: Get the data in long format (pivot_longer), split comma separated values in separate rows (separate_longer_delim) and get data in wide format (pivot_wider).
# tmp <- bsa_test |> 
#   select(complaint, upheld, not_upheld) |> 
#   pivot_longer(cols = -complaint, values_drop_na = TRUE) |> 
#   separate_longer_delim(value, ",") |> 
#   pivot_wider(names_from = value, values_from = name)



```



